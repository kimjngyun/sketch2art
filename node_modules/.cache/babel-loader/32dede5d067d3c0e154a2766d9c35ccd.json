{"remainingRequest":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js!/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/frontend/sketch2art/src/components/sketch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/frontend/sketch2art/src/components/sketch.vue","mtime":1619414332751},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["sketch.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"canvas-wrapper\">\n        <canvas id=\"canvas\" width=\"512\" height=\"512\"></canvas>\n        <v-btn @click=\"eraseCanvas\">clear</v-btn>\n    </div>\n\n</template>\n\n<script>\nexport default {\n    name: 'CanvasWrapper',\n    data: () => ({\n        context: null,\n        canvas: null,\n        previousX: 0,\n        previousY: 0,\n        currentX: 0,\n        currentY: 0,\n        pressing: false,\n        pressedAt: Date.now(),\n        highlightStartPoint: false,\n        shapes: [],\n        currentShape: [],\n        intervalLastPosition: [-1, -1]\n    }),\n    methods: {\n        eraseCanvas () {\n            this.shapes = []\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            console.log('erase the canvas')\n        },\n        prepareNewShape () {\n            this.currentShape = [\n                [],\n                [],\n                []\n            ]\n        },\n        storeCoordinates () {\n            if (this.intervalLastPosition[0] !== this.previousX &&\n                this.intervalLastPosition[1] !== this.previousY) {\n                this.intervalLastPosition = [this.previousX, this.previousY]\n                this.currentShape[0].push(this.previousX)\n                this.currentShape[1].push(this.previousY)\n                this.currentShape[2].push(Date.now() - this.pressedAt)\n            }\n        },\n        commitCurrentShape () {\n            this.shapes.push(this.currentShape)\n            /*\n            const drawOptions = {\n                canvasWidth: this.canvas.width,\n                canvasHeight: this.canvas.height\n            }\n            */\n        },\n        draw (mouseEvent) {\n            let timeInterval\n            switch (mouseEvent.type) {\n                case 'mousedown':\n                    timeInterval = this.drawMouseDown(mouseEvent)\n                    break\n                case 'mouseout':\n                    if (!this.pressing) break\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'mouseup':\n                    console.log('clearing interval!')\n                    this.pressing = false\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'mousemove':\n                    if (this.pressing) {\n                        this.drawMouseMove(mouseEvent)\n                    }\n                    break\n            }\n        },\n        drawMouseDown (mouseEvent) {\n            let highlightStartPoint\n            const drawColorStartingPoint = 'black'\n            this.updateXY(mouseEvent)\n            this.pressing = true\n            this.pressedAt = Date.now()\n            highlightStartPoint = true\n            this.prepareNewShape()\n            if (highlightStartPoint) {\n                this.context.beginPath()\n                this.context.fillStyle = drawColorStartingPoint\n                this.context.fillRect(this.currentX, this.currentY, 2, 2)\n                this.context.closePath()\n                highlightStartPoint = false\n            }\n            return window.setInterval(() => this.storeCoordinates(), 9)\n        },\n        drawMouseMove (mouseEvent) {\n            const drawStroke = 4\n            const drawColor = 'black'\n            // TODO: make a config and use it.\n            this.updateXY(mouseEvent)\n            this.context.beginPath()\n            this.context.moveTo(this.previousX, this.previousY)\n            this.context.lineTo(this.currentX, this.currentY)\n            this.context.strokeStyle = drawColor\n            this.context.fillStyle = drawColor\n            this.context.lineCap = 'round'\n            this.context.lineJoin = 'round'\n            this.context.lineWidth = drawStroke\n            this.context.stroke()\n            this.context.closePath()\n        },\n        updateXY (mouseEvent) {\n            this.previousX = this.currentX\n            this.previousY = this.currentY\n            this.currentX = mouseEvent.clientX - this.canvas.offsetLeft\n            this.currentY = mouseEvent.clientY - this.canvas.offsetTop\n        },\n        uploadCanvasToServer () {\n            const canvas = document.getElementById('canvas')\n            const imgBase64 = canvas.toDataURL('image/jpeg', 'image/octet-stream')\n            const decodImg = atob(imgBase64.split(',')[1])\n\n            let array = [];\n            for (let i = 0; i < decodImg .length; i++) {\n                array.push(decodImg .charCodeAt(i))\n            }\n\n            const file = new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\n            const fileName = 'canvas_img_' + new Date().getMilliseconds() + '.jpg'\n            let formData = new FormData()\n            formData.append('file', file, fileName)\n\n            $.ajax({\n                type: 'post',\n                url: '/upload/',\n                cache: false,\n                data: formData,\n                processData: false,\n                contentType: false,\n                success: function (data) {\n                    alert('Uploaded !!')\n                }\n            })\n        }\n    },\n    mounted () {\n        this.canvas = this.$el.querySelector('#canvas')\n        this.context = this.canvas.getContext('2d')\n        const mouseEvents = ['mousemove', 'mousedown', 'mouseup', 'mouseout']\n        mouseEvents.map(eventName => {\n            this.canvas.addEventListener(eventName, this.draw)\n        })\n        console.log(this.context)\n        console.log(this.canvas)\n    }\n}\n</script>\n\n<style scoped>\ncanvas {\n        background: orange;\n}\n</style>"],"sourceRoot":"src/components"}]}