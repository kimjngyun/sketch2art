{"remainingRequest":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js!/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/frontend/sketch2art/src/components/ImageCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/frontend/sketch2art/src/components/ImageCard.vue","mtime":1619413606543},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9raW1qbmd5dW4vZnJvbnRlbmQvc2tldGNoMmFydC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW1hZ2VDYXJkJywKICBwcm9wczogewogICAgaW1hZ2U6IE9iamVjdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzUHJvY2Vzc2VkOiBmYWxzZSwKICAgICAgc3R5bGU6IC0xLAogICAgICBzdHlsZXM6IFsnb3JpZ2luYWwnLCAnMCcsICcxJywgJzInLCAnMycsICc0JywgJzUnLCAnNicsICc3JywgJzgnLCAnOSddLAogICAgICBzdHlsZU5hbWVzOiBbJ2NhbmR5JywgJ2NvbXBvc2l0aW9uXzcnLCAnZmVhdGhlcnMnLCAnbGFfbXVzZScsICdtb3NhaWMnLCAncmFpbicsICdzdGFycnlfbmlnaHQnLCAndGhlX3NjcmVhbScsICd0aGVfd2F2ZScsICd1ZG5pZSddCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZGF0YVVSTHRvRmlsZTogZnVuY3Rpb24gZGF0YVVSTHRvRmlsZShkYXRhVVJMLCBmaWxlTmFtZSkgewogICAgICB2YXIgYXJyID0gZGF0YVVSTC5zcGxpdCgnLCcpOwogICAgICB2YXIgbWltZSA9IGFyclswXS5tYXRjaCgvOiguKj8pOy8pWzFdOwogICAgICB2YXIgYnN0ciA9IGF0b2IoYXJyWzFdKTsKICAgICAgdmFyIG4gPSBic3RyLmxlbmd0aDsKICAgICAgdmFyIHU4YXJyID0gbmV3IFVpbnQ4QXJyYXkobik7CgogICAgICB3aGlsZSAobi0tKSB7CiAgICAgICAgdThhcnJbbl0gPSBic3RyLmNoYXJDb2RlQXQobik7CiAgICAgIH0KCiAgICAgIHJldHVybiBuZXcgRmlsZShbdThhcnJdLCBmaWxlTmFtZSwgewogICAgICAgIHR5cGU6IG1pbWUKICAgICAgfSk7CiAgICB9LAogICAgc3R5bGl6ZTogZnVuY3Rpb24gc3R5bGl6ZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGZvcm1EYXRhLCBiYXNlVVJMLCBhcGlVUkwsIHJlc3BvbnNlLCBzdHlsZWRJbWFnZVVSTDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShfdGhpcy5zdHlsZSA9PT0gLTEpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpcy5pc1Byb2Nlc3NlZCA9IGZhbHNlOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIC8vIFRPRE86IGNsYXNz7JeQIGxvYWRpbmcg64Sj6riwIAogICAgICAgICAgICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnc3R5bGUnLCBfdGhpcy5zdHlsZSk7CiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2NvbnRlbnRJbWFnZScsIF90aGlzLmRhdGFVUkx0b0ZpbGUoX3RoaXMuaW1hZ2Uub3JpZ2luYWwsICJzdHlsZWRfIi5jb25jYXQoX3RoaXMuc3R5bGUpKSk7CiAgICAgICAgICAgICAgICBiYXNlVVJMID0gX3RoaXMuJHN0b3JlLmdldHRlcnMudXJsT2YoJ3N0eWxlVHJhbnNmZXJTZXJ2ZXInKTsKICAgICAgICAgICAgICAgIGFwaVVSTCA9ICIiLmNvbmNhdChiYXNlVVJMLCAiL2FwaS9zdHlsaXplIik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChhcGlVUkwsIGZvcm1EYXRhLCB7CiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2FycmF5YnVmZmVyJwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBzdHlsZWRJbWFnZVVSTCA9ICdkYXRhOicgKyByZXNwb25zZS5oZWFkZXJzWydjb250ZW50LXR5cGUnXSArICc7YmFzZTY0LCcgKyBCdWZmZXIuZnJvbShyZXNwb25zZS5kYXRhLCAnYmluYXJ5JykudG9TdHJpbmcoJ2Jhc2U2NCcpOwogICAgICAgICAgICAgICAgX3RoaXMuaW1hZ2UucHJvY2Vzc2VkID0gc3R5bGVkSW1hZ2VVUkw7CiAgICAgICAgICAgICAgICBfdGhpcy5pc1Byb2Nlc3NlZCA9IHRydWU7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgc3R5bGU6IGZ1bmN0aW9uIHN0eWxlKCkgewogICAgICB0aGlzLnN0eWxpemUoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ImageCard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n      <img v-if=\"!isProcessed\" :src=\"image.original\" />\n      <img v-else :src=\"image.processed\" />\n\n      <v-card-subtitle\n        v-if=\"!isProcessed\"\n        class=\"pb-0\"\n      >\n        Original Image\n      </v-card-subtitle>\n\n      <v-card-subtitle\n        v-else\n        class=\"pb-0\"\n      >\n      Styled Image with Style <b> \"{{ styleNames[style] }}\" </b>\n      </v-card-subtitle>\n\n      <v-card-text class=\"text--primary mb-8\">\n        <div>스타일 번호를 선택하세요.</div>\n        <v-slider\n          v-model=\"style\"\n          :tick-labels=\"styles\"\n          :min=\"-1\"\n          :max=\"9\"\n          step=\"1\"\n          ticks=\"always\"\n          label=\"Style Number\"\n          height=\"30px\"\n          hide-details=\"true\"\n          solo\n        >\n        </v-slider>\n      </v-card-text>\n    </v-card>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'ImageCard',\n\n  props: {\n    image: Object\n  },\n\n  data: () => ({\n    isProcessed: false,\n    style: -1,\n    styles: ['original', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    styleNames: ['candy', 'composition_7', 'feathers', 'la_muse', 'mosaic', 'rain', 'starry_night', 'the_scream', 'the_wave', 'udnie']\n  }),\n\n  methods: {\n    dataURLtoFile (dataURL, fileName) {\n      const arr = dataURL.split(',')\n      const mime = arr[0].match(/:(.*?);/)[1]\n      const bstr = atob(arr[1])\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n)\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n)\n      }\n\n      return new File([u8arr], fileName, {type: mime})\n    },\n\n    async stylize () {\n      if (this.style === -1) {\n        this.isProcessed = false\n        return\n      }\n\n      // TODO: class에 loading 넣기 \n      const formData = new FormData()\n\n      formData.append('style', this.style)\n      formData.append('contentImage', this.dataURLtoFile(this.image.original, `styled_${this.style}`))\n\n      const baseURL = this.$store.getters.urlOf('styleTransferServer')\n      const apiURL = `${baseURL}/api/stylize`\n\n      const response = await axios.post(apiURL, formData, {\n        responseType: 'arraybuffer'\n      })\n      const styledImageURL =\n        'data:' +\n        response.headers['content-type'] +\n        ';base64,' +\n        Buffer.from(response.data, 'binary').toString('base64') \n\n      this.image.processed = styledImageURL\n      this.isProcessed = true\n    }\n  },\n\n  watch: {\n    style () {\n      this.stylize()\n    }\n  }\n}\n</script>\n\n<style scoped>\nimg {\n  width: 100%;\n  height: auto;\n}\n\n.v-input {\n  font-size: 10px;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}