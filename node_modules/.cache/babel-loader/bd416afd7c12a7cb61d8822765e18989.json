{"remainingRequest":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js!/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/frontend/sketch2art/src/components/ImageCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/frontend/sketch2art/src/components/ImageCard.vue","mtime":1621592688684},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9raW1qbmd5dW4vZnJvbnRlbmQvc2tldGNoMmFydC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdJbWFnZUNhcmQnLAogIHByb3BzOiB7CiAgICBpbWFnZTogbWFwR2V0dGVycygnZ2V0SW1hZ2VzJykKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc1Byb2Nlc3NlZDogZmFsc2UsCiAgICAgIC8vIHN0eWxlOiAxMCwKICAgICAgdGVtcDA6IG51bGwsCiAgICAgIHRlbXAxOiBudWxsLAogICAgICB0ZW1wMjogbnVsbCwKICAgICAgdGVtcDM6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBkYXRhVVJMdG9GaWxlOiBmdW5jdGlvbiBkYXRhVVJMdG9GaWxlKGRhdGFVUkwsIGZpbGVOYW1lKSB7CiAgICAgIHZhciBhcnIgPSBkYXRhVVJMLnNwbGl0KCcsJyk7CiAgICAgIHZhciBtaW1lID0gYXJyWzBdLm1hdGNoKC86KC4qPyk7LylbMV07CiAgICAgIHZhciBic3RyID0gYXRvYihhcnJbMV0pOwogICAgICB2YXIgbiA9IGJzdHIubGVuZ3RoOwogICAgICB2YXIgdThhcnIgPSBuZXcgVWludDhBcnJheShuKTsKCiAgICAgIHdoaWxlIChuLS0pIHsKICAgICAgICB1OGFycltuXSA9IGJzdHIuY2hhckNvZGVBdChuKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG5ldyBGaWxlKFt1OGFycl0sIGZpbGVOYW1lLCB7CiAgICAgICAgdHlwZTogbWltZQogICAgICB9KTsKICAgIH0sCiAgICBzdWJtaXQ6IGZ1bmN0aW9uIHN1Ym1pdCgpIHt9LAogICAgc3R5bGl6ZTogZnVuY3Rpb24gc3R5bGl6ZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGZvcm1EYXRhLCBiYXNlVVJMLCBhcGlVUkwsIGksIHJlc3BvbnNlLCBzdHlsZWRJbWFnZVVSTDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdjb250ZW50SW1hZ2UnLCBfdGhpcy5kYXRhVVJMdG9GaWxlKF90aGlzLmltYWdlLm9yaWdpbmFsKSk7CiAgICAgICAgICAgICAgICBiYXNlVVJMID0gX3RoaXMuJHN0b3JlLmdldHRlcnMudXJsT2YoJ3N0eWxlVHJhbnNmZXJTZXJ2ZXInKTsKICAgICAgICAgICAgICAgIGFwaVVSTCA9ICIiLmNvbmNhdChiYXNlVVJMLCAiL2FwaS9zdHlsaXplIik7CiAgICAgICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgaWYgKCEoaSA8IDQpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChhcGlVUkwsIGZvcm1EYXRhLCB7CiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2FycmF5YnVmZmVyJwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHN0eWxlZEltYWdlVVJMID0gJ2RhdGE6JyArIHJlc3BvbnNlLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddICsgJztiYXNlNjQsJyArIEJ1ZmZlci5mcm9tKHJlc3BvbnNlLmRhdGEsICdiaW5hcnknKS50b1N0cmluZygnYmFzZTY0Jyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IGk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gX2NvbnRleHQudDAgPT09IDAgPyAxMyA6IF9jb250ZXh0LnQwID09PSAxID8gMTUgOiBfY29udGV4dC50MCA9PT0gMiA/IDE3IDogX2NvbnRleHQudDAgPT09IDMgPyAxOSA6IDIxOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgICBfdGhpcy50ZW1wMCA9IHN0eWxlZEltYWdlVVJMOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgiYnJlYWsiLCAyMSk7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgICBfdGhpcy50ZW1wMSA9IHN0eWxlZEltYWdlVVJMOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgiYnJlYWsiLCAyMSk7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgICBfdGhpcy50ZW1wMiA9IHN0eWxlZEltYWdlVVJMOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgiYnJlYWsiLCAyMSk7CgogICAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgICAgICBfdGhpcy50ZW1wMyA9IHN0eWxlZEltYWdlVVJMOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgiYnJlYWsiLCAyMSk7CgogICAgICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgICAgICBpKys7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICAgICAgX3RoaXMuaXNQcm9jZXNzZWQgPSB0cnVlOwoKICAgICAgICAgICAgICBjYXNlIDI1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGltYWdlOiBmdW5jdGlvbiBpbWFnZSgpIHsKICAgICAgdGhpcy5zdHlsaXplKCk7CiAgICB9LAogICAgY2hlY2tfaW1hZ2U6IGZ1bmN0aW9uIGNoZWNrX2ltYWdlKGltZykgewogICAgICB0aGlzLmltYWdlID0gaW1nOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuc3R5bGl6ZSgpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoZWNrX2ltYWdlOiBmdW5jdGlvbiBjaGVja19pbWFnZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0SW1hZ2VzWzBdOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ImageCard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"wrap\">\n  \n    <div v-if=\"isProcessed===false\"><img id=\"null\" src=\"../assets/1.jpg\" /></div>\n    <div v-else class=\"inf\">\n      <img id=\"i0\" :src=\"temp0\" />\n      <img id=\"i1\" :src=\"temp1\" />\n      <img id=\"i2\" :src=\"temp2\" />\n      <img id=\"i3\" :src=\"temp3\" />\n    </div>\n    <br/>\n  <div>\n    <v-btn v-on:click=\"change\" text color=\"black\" outlined elevation=\"0\">변경</v-btn>\n  </div>\n    \n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'ImageCard',\n  props: {\n    image: mapGetters('getImages')\n  },\n  data: () => ({\n    isProcessed: false,\n    // style: 10,\n    temp0: null,\n    temp1: null,\n    temp2: null,\n    temp3: null\n  }),\n\n  methods: {\n    dataURLtoFile (dataURL, fileName) {\n      const arr = dataURL.split(',')\n      const mime = arr[0].match(/:(.*?);/)[1]\n      const bstr = atob(arr[1])\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n)\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n)\n      }\n\n      return new File([u8arr], fileName, {type: mime})\n    },\n    submit () {\n\n    },\n    async stylize () {\n      const formData = new FormData()\n      formData.append('contentImage', this.dataURLtoFile(this.image.original))\n\n      const baseURL = this.$store.getters.urlOf('styleTransferServer')\n      const apiURL = `${baseURL}/api/stylize`\n\n      for (var i=0; i<4; i++){\n        const response = await axios.post(apiURL, formData, {\n          responseType: 'arraybuffer'\n        })\n        const styledImageURL =\n          'data:' +\n          response.headers['content-type'] +\n          ';base64,' +\n          Buffer.from(response.data, 'binary').toString('base64') \n        switch (i){\n          case 0:\n            this.temp0 = styledImageURL\n            break\n          case 1:\n            this.temp1 = styledImageURL\n            break\n          case 2:\n            this.temp2 = styledImageURL\n            break\n          case 3:\n            this.temp3 = styledImageURL\n            break\n        }\n      }\n      this.isProcessed = true\n    }\n  },\n\n  watch: {\n    image: function () {\n      this.stylize()\n    },\n    check_image (img) { \n      this.image = img \n    }\n  },\n  mounted () {\n    this.stylize()\n  },\n  computed: {\n    check_image () { return this.$store.getters.getImages[0] }\n  }\n}\n</script>\n\n<style scoped>\n#wrapIC {\n  display: flex;\n  width: 512px;\n}\n#null {\n  width: 512px;\n  height: 512px;\n\n}\nimg {\n  width: 256px;\n  height: 256px;\n}\n.inf {\n  display: felx;\n  flex-flow:column nowrap;\n  width: 512px;\n  margin: 0;\n  line-height: 0;\n}\n.inf img{\n  flex: 2 2 0;\n}\n</style>\n"],"sourceRoot":"src/components"}]}