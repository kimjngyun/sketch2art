{"remainingRequest":"/Users/kimjngyun/frontend/sketch2art/node_modules/thread-loader/dist/cjs.js!/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js!/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/frontend/sketch2art/src/components/UnivCanvas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/frontend/sketch2art/src/components/UnivCanvas.vue","mtime":1621592688684},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/thread-loader/dist/cjs.js","mtime":1619073328951},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UnivCanvas.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"wrapUC\">\n    <canvas class=\"canvas\" id=\"sketchpad\" height=\"512\" width=\"512\"></canvas>\n    \n    <div id=\"buttons\">\n        <br/>\n        <v-btn id=\"eraser\" v-on:click=\"eraser\" text color=\"black\" outlined elevation=\"0\">\n            <span v-if=\"isEraser\"> 펜 </span>\n            <span v-else> 지우개 </span>\n        </v-btn>\n        <v-btn v-on:click=\"eraseCanvas\" text color=\"black\" outlined elevation=\"0\">지우기</v-btn>\n        <v-btn v-on:click=\"capture\" text color=\"black\" outlined elevation=\"0\">제출</v-btn>\n    </div>\n    <!-- <button v-on:click=\"\">Add 1</button> -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapActions } from 'vuex'\n// import { mapMutations } from 'vuex'\nexport default {\n    name: 'UnivCanvas',\n    data: () => ({\n        canvas: null,\n        context: null,\n        previousX: 0,\n        previousY: 0,\n        currentX: 0,\n        currentY: 0,\n        mouseDown: 0,\n        mouseX: 0,\n        mousey: 0,\n        touchX: 0,\n        touchY: 0,\n        pressing: false,\n        pressedAt: Date.now(),\n        shapes: [],\n        currnetShape: [],\n        intervalLastPosition: [-1, -1],\n        reader: new FileReader(),\n        stroke: 3,\n        color: 'black',\n        isEraser: false\n    }),\n    prop: {\n        image: Object\n    },\n    methods: {\n        ...mapActions(['addNewImage']),\n        ...mapActions(['resetImage']),\n        newFile () {\n            const files = this.$el.querySelector('.fileInput').files\n            const newFile = files[files.length - 1]\n\n            this.reader.readAsDataURL(newFile)\n        },\n\n        attachFile () {\n            this.$el.querySelector('.fileInput').click()\n        },\n        eraser () {\n            if (this.isEraser === false) {\n                this.color = 'white'\n                this.stroke = 15\n                this.isEraser = true\n                console.log(\"Switch to eraser\")\n            } else {\n                this.color = 'black'\n                this.stroke = 3\n                this.isEraser = false\n                console.log(\"Switch to pen\")\n            }\n\n        },\n        capture () {\n            this.resetImage()\n            const canvas = this.$el.querySelector(\"canvas\")\n            const newImage = canvas.toDataURL(\"image/jpeg\");\n            this.addNewImage(newImage)\n\n            // save sketch img to server\n            const imgBase64 = canvas.toDataURL('image/jpeg', 'image/octet-stream');\n            const decodImg = atob(imgBase64.split(',')[1]);         \n            let array = [];\n\n            for (let i = 0; i < decodImg .length; i++) {\n                array.push(decodImg .charCodeAt(i));\n            }\n\n            const file = new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\n            const fileName = 'canvas_img_' + new Date().getMilliseconds() + '.jpg';\n            let formData = new FormData();\n            formData.append('file', file, fileName);\n            \n            const baseURL = this.$store.getters.urlOf('styleTransferServer')\n            const apiURL = `${baseURL}/api/saveSketch`\n            axios.post(apiURL, formData, {\n                responseType: 'arraybuffer'\n            })\n            console.log('Captured')\n\n        },\n        eraseCanvas () {\n            this.resetImage()\n            this.shapes = []\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.context.fillStyle = \"white\"\n            this.context.fillRect(0, 0, this.canvas.width, this.canvas.height)\n            console.log('erase the canvas')\n        },\n\n        prepareNewShape () {\n            this.currentShape = [\n                [],\n                [],\n                []\n            ]\n        },\n        storeCoordinates () {\n            if (this.intervalLastPosition[0] !== this.previousX &&\n                this.intervalLastPosition[1] !== this.previousY) {\n                this.intervalLastPosition = [this.previousX, this.previousY]\n                this.currentShape[0].push(this.previousX)\n                this.currentShape[1].push(this.previousY)\n                this.currentShape[2].push(Date.now() - this.pressedAt)\n            }\n        },\n        commitCurrentShape () {\n            this.shapes.push(this.currentShape)\n            console.log(this.currentShape)\n        },\n\n        draw (evt) {\n            let timeInterval\n            switch (evt.type) {\n                case 'pointerdown':\n                case 'mousedown':\n                    timeInterval = this.drawDown(evt)\n                    break\n                case 'pointercancle':\n                case 'touchcancle':\n                case 'mouseout':\n                    if (!this.pressing) break\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'pointerup':\n                case 'touchup':\n                case 'mouseup':\n                    console.log('clearing interval!')\n                    this.pressing = false\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'pointermove':\n                case 'mousemove':\n                    if (this.pressing) {\n                        this.drawMove(evt)\n                    }\n                    break\n                case 'touchmove':\n                    this.drawMove(evt)\n                    evt.preventDefault();\n                    break\n                case 'touchstart':\n                    this.drawDown(evt)\n                    timeInterval = this.drawDown(evt)\n                    evt.preventDefault();\n                    break\n                \n            }\n        },\n        drawDown (evt) {\n            this.updateXY(evt)\n            this.pressing = true\n            this.pressedAt = Date.now()\n\n            this.prepareNewShape()\n\n            return window.setInterval(() => this.storeCoordinates(), 9)\n        },\n        drawMove (evt) {\n            const drawStroke = this.stroke\n            const drawColor = this.color\n            this.updateXY(evt)\n            this.context.beginPath()\n            this.context.moveTo(this.previousX, this.previousY)\n            this.context.lineTo(this.currentX, this.currentY)\n            this.context.strokeStyle = drawColor\n            this.context.fillStyle = drawColor\n            this.context.lineCap = 'round'\n            this.context.lineJoin = 'round'\n            this.context.lineWidth = drawStroke\n            this.context.stroke()\n            this.context.closePath()\n        },\n        updateXY (evt) {\n            this.previousX = this.currentX\n            this.previousY = this.currentY\n\n            if(evt.targetTouches) {\n                // Prefer Touch Events\n                this.getTouchPos(evt)\n                this.currentX = this.touchX\n                this.currentY = this.touchY\n            } else {\n                this.getMousePos(evt)\n                this.currentX = this.mouseX\n                this.currentY = this.mouseY\n            }\n        },\n\n        getMousePos (evt) {\n            if (evt.offsetX) {\n                this.mouseX = evt.offsetX;\n                this.mouseY = evt.offsetY;\n            }\n            else if (evt.layerX) {\n                this.mouseX = evt.layerX;\n                this.mouseY = evt.layerY;\n            }\n        },\n\n        getTouchPos (evt) {\n            if(evt.touches) {\n                if (evt.touches.length == 1) { // Only deal with one finger\n                    var touch = evt.touches[0]; // Finger #1\n                    var rect = evt.target.getBoundingClientRect();\n                    this.touchX=touch.pageX-rect.x;\n                    this.touchY=touch.pageY-rect.y;\n                }\n            console.log(\"gotTP\")\n            }\n        }\n\n    },\n    mounted () {\n        this.canvas = this.$el.querySelector(\"canvas\")\n        this.context = this.canvas.getContext('2d')\n\n\t\tthis.context.fillStyle = \"white\"\n\t\tthis.context.fillRect(0, 0, 512, 512)\n\n        if (window.PointerEvent) {\n            // Add Pointer Event Listener\n            this.canvas.addEventListener('pointerdown', this.draw);\n            this.canvas.addEventListener('pointermove', this.draw);\n            this.canvas.addEventListener('pointerup', this.draw);\n            this.canvas.addEventListener('pointercancel', this.draw);\n            } else {\n            // Add Touch Listener\n            this.canvas.addEventListener('touchstart', this.draw);\n            this.canvas.addEventListener('touchmove', this.draw);\n            this.canvas.addEventListener('touchend', this.draw);\n            this.canvas.addEventListener('touchcancel', this.draw);\n            // Add Mouse Listener\n            this.canvas.addEventListener('mousemove', this.draw);\n            this.canvas.addEventListener('mousedown', this.draw);\n            this.canvas.addEventListener('mouseup', this.draw);\n            this.canvas.addEventListener('mousecout', this.draw);\n        }\n        this.reader.addEventListener('load', () => {\n            this.addNewImage(this.reader.result)\n        })\n    }\n}\n</script>\n\n\n<style scoped>\n#wrapUC {\n    display: flex;\n    width: 512px;\n    flex-flow: row wrap;\n}\n\n.canvas {\n    touch-action: none;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    position: relative;\n    height: 512px;\n    cursor: crosshair;\n    order: 1;\n    /* border: 2px solid black; */\n}\n\n#buttons {\n    order: 2;\n    align-content: space-around;\n}\n/* #eraser {\n    position: absolute;\n    top: 0;\n    left: 0;\n} */\n</style>\n"],"sourceRoot":"src/components"}]}