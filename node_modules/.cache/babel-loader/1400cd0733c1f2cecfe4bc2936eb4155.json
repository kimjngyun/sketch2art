{"remainingRequest":"/Users/kimjngyun/sketch2art/node_modules/babel-loader/lib/index.js!/Users/kimjngyun/sketch2art/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimjngyun/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/sketch2art/src/components/mobileSketch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/sketch2art/src/components/mobileSketch.vue","mtime":1619886324885},{"path":"/Users/kimjngyun/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["mobileSketch.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <body onload=\"init()\">\n        <div id=\"sketchpadapp\">\n            <div class=\"rightside\">\n                <canvas id=\"sketchpad\" height=\"512\" width=\"512\">\n                </canvas>\n            </div>\n            <div class=\"btns\">\n                <v-btn @click=\"eraseCanvas\">clear</v-btn>\n                <v-btn @click=\"capture\">submit</v-btn>\n            </div>\n        </div>\n    </body>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapActions } from 'vuex'\nexport default {\n    name: 'mobileSketch',\n    data: () => ({\n        canvas: null,\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n        ctx: 0,\n        mouseX: 0,\n        mousey: 0,\n        mouseDown: 0,\n        touchX: 0,\n        touchY: 0,\n        shapes: [],\n        stroke: 2\n    }),\n    methods: {\n        ...mapActions(['addNewImage']),\n        newFile () {\n            const files = this.$el.querySelector('.fileInput').files\n            const newFile = files[files.length - 1]\n\n            this.reader.readAsDataURL(newFile)\n        },\n\n        attachFile () {\n            this.$el.querySelector('.fileInput').click()\n        },\n\n        capture () {\n            const canvas = this.$el.querySelector(\"canvas\")\n            const newImage = canvas.toDataURL(\"image/jpeg\");\n\n            this.addNewImage(newImage)\n\n            const imgBase64 = canvas.toDataURL('image/jpeg', 'image/octet-stream');\n            const decodImg = atob(imgBase64.split(',')[1]);         \n            let array = [];\n\n            for (let i = 0; i < decodImg .length; i++) {\n                array.push(decodImg .charCodeAt(i));\n            }\n\n            const file = new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\n            const fileName = 'canvas_img_' + new Date().getMilliseconds() + '.jpg';\n            let formData = new FormData();\n            formData.append('file', file, fileName);\n            \n            const baseURL = this.$store.getters.urlOf('styleTransferServer')\n            const apiURL = `${baseURL}/fileUpload`\n            axios.post(apiURL, formData, {\n                responseType: 'arraybuffer'\n            })\n            console.log('Uploaded and Captured')\n        },\n        eraseCanvas () {\n            this.shapes = []\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.fillStyle = \"white\"\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n            console.log('erase the canvas')\n        },\n        drawDot(ctx,x,y,size) {\n            // Let's use black by setting RGB values to 0, and 255 alpha (completely opaque)\n            this.r=0; this.g=0; this.b=0; this.a=255;\n\n            // Select a fill style\n            ctx.fillStyle = \"rgba(\"+this.r+\",\"+this.g+\",\"+this.b+\",\"+(this.a/255)+\")\";\n\n            // Draw a filled circle\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI*2, true); \n            ctx.closePath();\n            ctx.fill();\n        },\n\n        // Clear the canvas context using the canvas width and height\n        // clearCanvas(canvas,ctx) {\n        //     ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // },\n\n        // Keep track of the mouse button being pressed and draw a dot at current location\n        sketchpad_mouseDown() {\n            this.mouseDown=1;\n            this.drawDot(this.ctx,this.mouseX,this.mouseY,this.stroke);\n        },\n\n        // Keep track of the mouse button being released\n        sketchpad_mouseUp() {\n            this.mouseDown=0;\n        },\n\n        // Keep track of the mouse position and draw a dot if mouse button is currently pressed\n        sketchpad_mouseMove(e) { \n            // Update the mouse co-ordinates when moved\n            this.getMousePos(e);\n\n            // Draw a dot if the mouse button is currently being pressed\n            if (this.mouseDown==1) {\n                this.drawDot(this.ctx,this.mouseX,this.mouseY,this.stroke);\n            }\n        },\n\n        // Get the current mouse position relative to the top-left of the canvas\n        getMousePos(e) {\n            // if (!e)\n            //     e = event;\n\n            if (e.offsetX) {\n                this.mouseX = e.offsetX;\n                this.mouseY = e.offsetY;\n            }\n            else if (e.layerX) {\n                this.mouseX = e.layerX;\n                this.mouseY = e.layerY;\n            }\n        },\n\n        // Draw something when a touch start is detected\n        sketchpad_touchStart() {\n            // Update the touch co-ordinates\n            this.getTouchPos();\n\n            this.drawDot(this.ctx,this.touchX,this.touchY, this.stroke);\n\n            // Prevents an additional mousedown event being triggered\n            event.preventDefault();\n        },\n\n    // Draw something and prevent the default scrolling when touch movement is detected\n        sketchpad_touchMove(e) { \n            // Update the touch co-ordinates\n            this.getTouchPos(e);\n\n            // During a touchmove event, unlike a mousemove event, we don't need to check if the touch is engaged, since there will always be contact with the screen by definition.\n            this.drawDot(this.ctx,this.touchX,this.touchY, this.stroke); \n\n            // Prevent a scrolling action as a result of this touchmove triggering.\n            event.preventDefault();\n        },\n\n    // Get the touch position relative to the top-left of the canvas\n    // When we get the raw values of pageX and pageY below, they take into account the scrolling on the page\n    // but not the position relative to our target div. We'll adjust them using \"target.offsetLeft\" and\n    // \"target.offsetTop\" to get the correct values in relation to the top left of the canvas.\n        getTouchPos(e) {\n            // if (!e)\n            //     e = event;\n\n            if(e.touches) {\n                if (e.touches.length == 1) { // Only deal with one finger\n                    var touch = e.touches[0]; // Get the information for finger #1\n                    var rect = e.target.getBoundingClientRect();\n                    this.touchX=touch.pageX-rect.x;\n                    this.touchY=touch.pageY-rect.y;\n                    console.log(touch.target.offsetLeft, touch.target.offsetTop)\n                }\n            }\n        },\n\n    },\n    mounted () {\n        // Set-up the canvas and add our event handlers after the page has loaded\n        // Get the specific canvas element from the HTML document\n        this.canvas = document.getElementById('sketchpad');\n        \n        // If the browser supports the canvas tag, get the 2d drawing context for this canvas\n        if (this.canvas.getContext)\n            this.ctx = this.canvas.getContext('2d');\n            this.ctx.fillStyle = \"white\"\n            this.ctx.fillRect(0, 0, 512, 512)\n        // Check that we have a valid context to draw on/with before adding event handlers\n        if (this.ctx) {\n            // React to mouse events on the canvas, and mouseup on the entire document\n            this.canvas.addEventListener('mousedown', this.sketchpad_mouseDown, false);\n            this.canvas.addEventListener('mousemove', this.sketchpad_mouseMove, false);\n            window.addEventListener('mouseup', this.sketchpad_mouseUp, false);\n            // React to touch events on the canvas\n            this.canvas.addEventListener('touchstart', this.sketchpad_touchStart, false);\n            this.canvas.addEventListener('touchmove', this.sketchpad_touchMove, false);\n        }\n    }\n}\n</script>\n\n\n<style>\n/* Some CSS styling */\n#sketchpadapp {\n    /* Prevent nearby text being highlighted when accidentally dragging mouse outside confines of the canvas */\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.rightside {\n    float:left;\n    margin-left:20px;\n}\n#sketchpad {\n    float:left;\n    height:512pxs;\n    width:512px;\n    border:2px solid #888;\n    border-radius:4px;\n    position:relative; /* Necessary for correct mouse co-ords in Firefox */\n}\n#clearbutton {\n    font-size: 15px;\n    padding: 10px;\n    -webkit-appearance: none;\n    background: #eee;\n    border: 1px solid #888;\n}\n</style>\n"],"sourceRoot":"src/components"}]}