{"remainingRequest":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/frontend/sketch2art/src/components/sketch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/frontend/sketch2art/src/components/sketch.vue","mtime":1619414332751},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDYW52YXNXcmFwcGVyJywKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgY29udGV4dDogbnVsbCwKICAgICAgICBjYW52YXM6IG51bGwsCiAgICAgICAgcHJldmlvdXNYOiAwLAogICAgICAgIHByZXZpb3VzWTogMCwKICAgICAgICBjdXJyZW50WDogMCwKICAgICAgICBjdXJyZW50WTogMCwKICAgICAgICBwcmVzc2luZzogZmFsc2UsCiAgICAgICAgcHJlc3NlZEF0OiBEYXRlLm5vdygpLAogICAgICAgIGhpZ2hsaWdodFN0YXJ0UG9pbnQ6IGZhbHNlLAogICAgICAgIHNoYXBlczogW10sCiAgICAgICAgY3VycmVudFNoYXBlOiBbXSwKICAgICAgICBpbnRlcnZhbExhc3RQb3NpdGlvbjogWy0xLCAtMV0KICAgIH0pLAogICAgbWV0aG9kczogewogICAgICAgIGVyYXNlQ2FudmFzICgpIHsKICAgICAgICAgICAgdGhpcy5zaGFwZXMgPSBbXQogICAgICAgICAgICB0aGlzLmNvbnRleHQuY2xlYXJSZWN0KDAsIDAsIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcmFzZSB0aGUgY2FudmFzJykKICAgICAgICB9LAogICAgICAgIHByZXBhcmVOZXdTaGFwZSAoKSB7CiAgICAgICAgICAgIHRoaXMuY3VycmVudFNoYXBlID0gWwogICAgICAgICAgICAgICAgW10sCiAgICAgICAgICAgICAgICBbXSwKICAgICAgICAgICAgICAgIFtdCiAgICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgIHN0b3JlQ29vcmRpbmF0ZXMgKCkgewogICAgICAgICAgICBpZiAodGhpcy5pbnRlcnZhbExhc3RQb3NpdGlvblswXSAhPT0gdGhpcy5wcmV2aW91c1ggJiYKICAgICAgICAgICAgICAgIHRoaXMuaW50ZXJ2YWxMYXN0UG9zaXRpb25bMV0gIT09IHRoaXMucHJldmlvdXNZKSB7CiAgICAgICAgICAgICAgICB0aGlzLmludGVydmFsTGFzdFBvc2l0aW9uID0gW3RoaXMucHJldmlvdXNYLCB0aGlzLnByZXZpb3VzWV0KICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFNoYXBlWzBdLnB1c2godGhpcy5wcmV2aW91c1gpCiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRTaGFwZVsxXS5wdXNoKHRoaXMucHJldmlvdXNZKQogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50U2hhcGVbMl0ucHVzaChEYXRlLm5vdygpIC0gdGhpcy5wcmVzc2VkQXQpCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGNvbW1pdEN1cnJlbnRTaGFwZSAoKSB7CiAgICAgICAgICAgIHRoaXMuc2hhcGVzLnB1c2godGhpcy5jdXJyZW50U2hhcGUpCiAgICAgICAgICAgIC8qCiAgICAgICAgICAgIGNvbnN0IGRyYXdPcHRpb25zID0gewogICAgICAgICAgICAgICAgY2FudmFzV2lkdGg6IHRoaXMuY2FudmFzLndpZHRoLAogICAgICAgICAgICAgICAgY2FudmFzSGVpZ2h0OiB0aGlzLmNhbnZhcy5oZWlnaHQKICAgICAgICAgICAgfQogICAgICAgICAgICAqLwogICAgICAgIH0sCiAgICAgICAgZHJhdyAobW91c2VFdmVudCkgewogICAgICAgICAgICBsZXQgdGltZUludGVydmFsCiAgICAgICAgICAgIHN3aXRjaCAobW91c2VFdmVudC50eXBlKSB7CiAgICAgICAgICAgICAgICBjYXNlICdtb3VzZWRvd24nOgogICAgICAgICAgICAgICAgICAgIHRpbWVJbnRlcnZhbCA9IHRoaXMuZHJhd01vdXNlRG93bihtb3VzZUV2ZW50KQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBjYXNlICdtb3VzZW91dCc6CiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnByZXNzaW5nKSBicmVhawogICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZUludGVydmFsKQogICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbWl0Q3VycmVudFNoYXBlKCkKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgY2FzZSAnbW91c2V1cCc6CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsZWFyaW5nIGludGVydmFsIScpCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmVzc2luZyA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lSW50ZXJ2YWwpCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21taXRDdXJyZW50U2hhcGUoKQogICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBjYXNlICdtb3VzZW1vdmUnOgogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnByZXNzaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZHJhd01vdXNlTW92ZShtb3VzZUV2ZW50KQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBkcmF3TW91c2VEb3duIChtb3VzZUV2ZW50KSB7CiAgICAgICAgICAgIGxldCBoaWdobGlnaHRTdGFydFBvaW50CiAgICAgICAgICAgIGNvbnN0IGRyYXdDb2xvclN0YXJ0aW5nUG9pbnQgPSAnYmxhY2snCiAgICAgICAgICAgIHRoaXMudXBkYXRlWFkobW91c2VFdmVudCkKICAgICAgICAgICAgdGhpcy5wcmVzc2luZyA9IHRydWUKICAgICAgICAgICAgdGhpcy5wcmVzc2VkQXQgPSBEYXRlLm5vdygpCiAgICAgICAgICAgIGhpZ2hsaWdodFN0YXJ0UG9pbnQgPSB0cnVlCiAgICAgICAgICAgIHRoaXMucHJlcGFyZU5ld1NoYXBlKCkKICAgICAgICAgICAgaWYgKGhpZ2hsaWdodFN0YXJ0UG9pbnQpIHsKICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKQogICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IGRyYXdDb2xvclN0YXJ0aW5nUG9pbnQKICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsUmVjdCh0aGlzLmN1cnJlbnRYLCB0aGlzLmN1cnJlbnRZLCAyLCAyKQogICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LmNsb3NlUGF0aCgpCiAgICAgICAgICAgICAgICBoaWdobGlnaHRTdGFydFBvaW50ID0gZmFsc2UKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gd2luZG93LnNldEludGVydmFsKCgpID0+IHRoaXMuc3RvcmVDb29yZGluYXRlcygpLCA5KQogICAgICAgIH0sCiAgICAgICAgZHJhd01vdXNlTW92ZSAobW91c2VFdmVudCkgewogICAgICAgICAgICBjb25zdCBkcmF3U3Ryb2tlID0gNAogICAgICAgICAgICBjb25zdCBkcmF3Q29sb3IgPSAnYmxhY2snCiAgICAgICAgICAgIC8vIFRPRE86IG1ha2UgYSBjb25maWcgYW5kIHVzZSBpdC4KICAgICAgICAgICAgdGhpcy51cGRhdGVYWShtb3VzZUV2ZW50KQogICAgICAgICAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCkKICAgICAgICAgICAgdGhpcy5jb250ZXh0Lm1vdmVUbyh0aGlzLnByZXZpb3VzWCwgdGhpcy5wcmV2aW91c1kpCiAgICAgICAgICAgIHRoaXMuY29udGV4dC5saW5lVG8odGhpcy5jdXJyZW50WCwgdGhpcy5jdXJyZW50WSkKICAgICAgICAgICAgdGhpcy5jb250ZXh0LnN0cm9rZVN0eWxlID0gZHJhd0NvbG9yCiAgICAgICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBkcmF3Q29sb3IKICAgICAgICAgICAgdGhpcy5jb250ZXh0LmxpbmVDYXAgPSAncm91bmQnCiAgICAgICAgICAgIHRoaXMuY29udGV4dC5saW5lSm9pbiA9ICdyb3VuZCcKICAgICAgICAgICAgdGhpcy5jb250ZXh0LmxpbmVXaWR0aCA9IGRyYXdTdHJva2UKICAgICAgICAgICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpCiAgICAgICAgICAgIHRoaXMuY29udGV4dC5jbG9zZVBhdGgoKQogICAgICAgIH0sCiAgICAgICAgdXBkYXRlWFkgKG1vdXNlRXZlbnQpIHsKICAgICAgICAgICAgdGhpcy5wcmV2aW91c1ggPSB0aGlzLmN1cnJlbnRYCiAgICAgICAgICAgIHRoaXMucHJldmlvdXNZID0gdGhpcy5jdXJyZW50WQogICAgICAgICAgICB0aGlzLmN1cnJlbnRYID0gbW91c2VFdmVudC5jbGllbnRYIC0gdGhpcy5jYW52YXMub2Zmc2V0TGVmdAogICAgICAgICAgICB0aGlzLmN1cnJlbnRZID0gbW91c2VFdmVudC5jbGllbnRZIC0gdGhpcy5jYW52YXMub2Zmc2V0VG9wCiAgICAgICAgfSwKICAgICAgICB1cGxvYWRDYW52YXNUb1NlcnZlciAoKSB7CiAgICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMnKQogICAgICAgICAgICBjb25zdCBpbWdCYXNlNjQgPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgJ2ltYWdlL29jdGV0LXN0cmVhbScpCiAgICAgICAgICAgIGNvbnN0IGRlY29kSW1nID0gYXRvYihpbWdCYXNlNjQuc3BsaXQoJywnKVsxXSkKCiAgICAgICAgICAgIGxldCBhcnJheSA9IFtdOwogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRlY29kSW1nIC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgYXJyYXkucHVzaChkZWNvZEltZyAuY2hhckNvZGVBdChpKSkKICAgICAgICAgICAgfQoKICAgICAgICAgICAgY29uc3QgZmlsZSA9IG5ldyBCbG9iKFtuZXcgVWludDhBcnJheShhcnJheSldLCB7dHlwZTogJ2ltYWdlL2pwZWcnfSk7CiAgICAgICAgICAgIGNvbnN0IGZpbGVOYW1lID0gJ2NhbnZhc19pbWdfJyArIG5ldyBEYXRlKCkuZ2V0TWlsbGlzZWNvbmRzKCkgKyAnLmpwZycKICAgICAgICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkKICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSwgZmlsZU5hbWUpCgogICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgdHlwZTogJ3Bvc3QnLAogICAgICAgICAgICAgICAgdXJsOiAnL3VwbG9hZC8nLAogICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLAogICAgICAgICAgICAgICAgZGF0YTogZm9ybURhdGEsCiAgICAgICAgICAgICAgICBwcm9jZXNzRGF0YTogZmFsc2UsCiAgICAgICAgICAgICAgICBjb250ZW50VHlwZTogZmFsc2UsCiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdVcGxvYWRlZCAhIScpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQgKCkgewogICAgICAgIHRoaXMuY2FudmFzID0gdGhpcy4kZWwucXVlcnlTZWxlY3RvcignI2NhbnZhcycpCiAgICAgICAgdGhpcy5jb250ZXh0ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKQogICAgICAgIGNvbnN0IG1vdXNlRXZlbnRzID0gWydtb3VzZW1vdmUnLCAnbW91c2Vkb3duJywgJ21vdXNldXAnLCAnbW91c2VvdXQnXQogICAgICAgIG1vdXNlRXZlbnRzLm1hcChldmVudE5hbWUgPT4gewogICAgICAgICAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgdGhpcy5kcmF3KQogICAgICAgIH0pCiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb250ZXh0KQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuY2FudmFzKQogICAgfQp9Cg=="},{"version":3,"sources":["sketch.vue"],"names":[],"mappingsfile":"sketch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"canvas-wrapper\">\n        <canvas id=\"canvas\" width=\"512\" height=\"512\"></canvas>\n        <v-btn @click=\"eraseCanvas\">clear</v-btn>\n    </div>\n\n</template>\n\n<script>\nexport default {\n    name: 'CanvasWrapper',\n    data: () => ({\n        context: null,\n        canvas: null,\n        previousX: 0,\n        previousY: 0,\n        currentX: 0,\n        currentY: 0,\n        pressing: false,\n        pressedAt: Date.now(),\n        highlightStartPoint: false,\n        shapes: [],\n        currentShape: [],\n        intervalLastPosition: [-1, -1]\n    }),\n    methods: {\n        eraseCanvas () {\n            this.shapes = []\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            console.log('erase the canvas')\n        },\n        prepareNewShape () {\n            this.currentShape = [\n                [],\n                [],\n                []\n            ]\n        },\n        storeCoordinates () {\n            if (this.intervalLastPosition[0] !== this.previousX &&\n                this.intervalLastPosition[1] !== this.previousY) {\n                this.intervalLastPosition = [this.previousX, this.previousY]\n                this.currentShape[0].push(this.previousX)\n                this.currentShape[1].push(this.previousY)\n                this.currentShape[2].push(Date.now() - this.pressedAt)\n            }\n        },\n        commitCurrentShape () {\n            this.shapes.push(this.currentShape)\n            /*\n            const drawOptions = {\n                canvasWidth: this.canvas.width,\n                canvasHeight: this.canvas.height\n            }\n            */\n        },\n        draw (mouseEvent) {\n            let timeInterval\n            switch (mouseEvent.type) {\n                case 'mousedown':\n                    timeInterval = this.drawMouseDown(mouseEvent)\n                    break\n                case 'mouseout':\n                    if (!this.pressing) break\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'mouseup':\n                    console.log('clearing interval!')\n                    this.pressing = false\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'mousemove':\n                    if (this.pressing) {\n                        this.drawMouseMove(mouseEvent)\n                    }\n                    break\n            }\n        },\n        drawMouseDown (mouseEvent) {\n            let highlightStartPoint\n            const drawColorStartingPoint = 'black'\n            this.updateXY(mouseEvent)\n            this.pressing = true\n            this.pressedAt = Date.now()\n            highlightStartPoint = true\n            this.prepareNewShape()\n            if (highlightStartPoint) {\n                this.context.beginPath()\n                this.context.fillStyle = drawColorStartingPoint\n                this.context.fillRect(this.currentX, this.currentY, 2, 2)\n                this.context.closePath()\n                highlightStartPoint = false\n            }\n            return window.setInterval(() => this.storeCoordinates(), 9)\n        },\n        drawMouseMove (mouseEvent) {\n            const drawStroke = 4\n            const drawColor = 'black'\n            // TODO: make a config and use it.\n            this.updateXY(mouseEvent)\n            this.context.beginPath()\n            this.context.moveTo(this.previousX, this.previousY)\n            this.context.lineTo(this.currentX, this.currentY)\n            this.context.strokeStyle = drawColor\n            this.context.fillStyle = drawColor\n            this.context.lineCap = 'round'\n            this.context.lineJoin = 'round'\n            this.context.lineWidth = drawStroke\n            this.context.stroke()\n            this.context.closePath()\n        },\n        updateXY (mouseEvent) {\n            this.previousX = this.currentX\n            this.previousY = this.currentY\n            this.currentX = mouseEvent.clientX - this.canvas.offsetLeft\n            this.currentY = mouseEvent.clientY - this.canvas.offsetTop\n        },\n        uploadCanvasToServer () {\n            const canvas = document.getElementById('canvas')\n            const imgBase64 = canvas.toDataURL('image/jpeg', 'image/octet-stream')\n            const decodImg = atob(imgBase64.split(',')[1])\n\n            let array = [];\n            for (let i = 0; i < decodImg .length; i++) {\n                array.push(decodImg .charCodeAt(i))\n            }\n\n            const file = new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\n            const fileName = 'canvas_img_' + new Date().getMilliseconds() + '.jpg'\n            let formData = new FormData()\n            formData.append('file', file, fileName)\n\n            $.ajax({\n                type: 'post',\n                url: '/upload/',\n                cache: false,\n                data: formData,\n                processData: false,\n                contentType: false,\n                success: function (data) {\n                    alert('Uploaded !!')\n                }\n            })\n        }\n    },\n    mounted () {\n        this.canvas = this.$el.querySelector('#canvas')\n        this.context = this.canvas.getContext('2d')\n        const mouseEvents = ['mousemove', 'mousedown', 'mouseup', 'mouseout']\n        mouseEvents.map(eventName => {\n            this.canvas.addEventListener(eventName, this.draw)\n        })\n        console.log(this.context)\n        console.log(this.canvas)\n    }\n}\n</script>\n\n<style scoped>\ncanvas {\n        background: orange;\n}\n</style>"]}]}