{"remainingRequest":"/Users/kimjngyun/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/sketch2art/src/components/ImageCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/sketch2art/src/components/ImageCard.vue","mtime":1619952461706},{"path":"/Users/kimjngyun/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/sketch2art/node_modules/thread-loader/dist/cjs.js","mtime":1619073328951},{"path":"/Users/kimjngyun/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW1hZ2VDYXJkJywKCiAgcHJvcHM6IHsKICAgIGltYWdlOiBPYmplY3QKICB9LAoKICBkYXRhOiAoKSA9PiAoewogICAgaXNQcm9jZXNzZWQ6IGZhbHNlLAogICAgc3R5bGU6IDEwLAogICAgc3R5bGVzOiBbJ29yaWdpbmFsJywgJzAnLCAnMScsICcyJywgJzMnLCAnNCcsICc1JywgJzYnLCAnNycsICc4JywgJzknLCAnMTAnXSwKICAgIHN0eWxlTmFtZXM6IFsnY2FuZHknLCAnY29tcG9zaXRpb25fNycsICdmZWF0aGVycycsICdsYV9tdXNlJywgJ21vc2FpYycsICdyYWluJywgJ3N0YXJyeV9uaWdodCcsICd0aGVfc2NyZWFtJywgJ3RoZV93YXZlJywgJ3VkbmllJywgJ3JhbmRvbSddIC8vIFRPRE86IFJFTkFNRQogIH0pLAoKICBtZXRob2RzOiB7CiAgICBkYXRhVVJMdG9GaWxlIChkYXRhVVJMLCBmaWxlTmFtZSkgewogICAgICBjb25zdCBhcnIgPSBkYXRhVVJMLnNwbGl0KCcsJykKICAgICAgY29uc3QgbWltZSA9IGFyclswXS5tYXRjaCgvOiguKj8pOy8pWzFdCiAgICAgIGNvbnN0IGJzdHIgPSBhdG9iKGFyclsxXSkKICAgICAgbGV0IG4gPSBic3RyLmxlbmd0aDsKICAgICAgY29uc3QgdThhcnIgPSBuZXcgVWludDhBcnJheShuKQoKICAgICAgd2hpbGUgKG4tLSkgewogICAgICAgIHU4YXJyW25dID0gYnN0ci5jaGFyQ29kZUF0KG4pCiAgICAgIH0KCiAgICAgIHJldHVybiBuZXcgRmlsZShbdThhcnJdLCBmaWxlTmFtZSwge3R5cGU6IG1pbWV9KQogICAgfSwKICAgIHN1Ym1pdCAoKSB7CgogICAgfSwKICAgIGFzeW5jIHN0eWxpemUgKCkgewogICAgICBpZiAodGhpcy5zdHlsZSA9PT0gLTEpIHsKICAgICAgICB0aGlzLmlzUHJvY2Vzc2VkID0gZmFsc2UKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICAKICAgICAgLy8gdGhpcy5zdHlsZSA9IDEwCiAgICAgIC8vIFRPRE86IGNsYXNz7JeQIGxvYWRpbmcg64Sj6riwIAogICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpCgogICAgICBmb3JtRGF0YS5hcHBlbmQoJ3N0eWxlJywgdGhpcy5zdHlsZSkKICAgICAgZm9ybURhdGEuYXBwZW5kKCdjb250ZW50SW1hZ2UnLCB0aGlzLmRhdGFVUkx0b0ZpbGUodGhpcy5pbWFnZS5vcmlnaW5hbCwgYHN0eWxlZF8ke3RoaXMuc3R5bGV9YCkpCgogICAgICBjb25zdCBiYXNlVVJMID0gdGhpcy4kc3RvcmUuZ2V0dGVycy51cmxPZignc3R5bGVUcmFuc2ZlclNlcnZlcicpCiAgICAgIGNvbnN0IGFwaVVSTCA9IGAke2Jhc2VVUkx9L2FwaS9zdHlsaXplYAoKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KGFwaVVSTCwgZm9ybURhdGEsIHsKICAgICAgICByZXNwb25zZVR5cGU6ICdhcnJheWJ1ZmZlcicKICAgICAgfSkKICAgICAgY29uc3Qgc3R5bGVkSW1hZ2VVUkwgPQogICAgICAgICdkYXRhOicgKwogICAgICAgIHJlc3BvbnNlLmhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddICsKICAgICAgICAnO2Jhc2U2NCwnICsKICAgICAgICBCdWZmZXIuZnJvbShyZXNwb25zZS5kYXRhLCAnYmluYXJ5JykudG9TdHJpbmcoJ2Jhc2U2NCcpIAoKICAgICAgdGhpcy5pbWFnZS5wcm9jZXNzZWQgPSBzdHlsZWRJbWFnZVVSTAogICAgICB0aGlzLmlzUHJvY2Vzc2VkID0gdHJ1ZQogICAgfQogIH0sCgogIHdhdGNoOiB7CiAgICBzdHlsZSAoKSB7CiAgICAgIHRoaXMuc3R5bGl6ZSgpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ImageCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ImageCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card elevation=\"0\">\n      <!-- <img v-if=\"!isProcessed\" :src=\"image.original\" /> -->\n      <img id=\"image\" v-if=\"!isProcessed\" src=\"../assets/1.jpg\" />\n      <img id=\"image\" v-else :src=\"image.processed\" />\n\n      <!-- <v-card-subtitle\n        v-if=\"!isProcessed\"\n        class=\"pb-0\"\n      >\n        Original Image\n      </v-card-subtitle>\n\n      <v-card-subtitle\n        v-else\n        class=\"pb-0\"\n      >\n      Styled Image with Style <b> \"{{ styleNames[style] }}\" </b>\n      </v-card-subtitle> -->\n      <v-card-text v-if=\"!isProcessed\">\n        Draw and Submit\n        <br/>\n        Press Change\n      </v-card-text>\n      <v-card-text v-else>\n        Translated Sketch!\n        <br/>\n        If you don't like, press change button!\n      </v-card-text>\n      <v-card-actions>\n        <v-btn text color=\"black\" outlined elevation=\"0\" @click=\"stylize\"> Change </v-btn>\n        <v-btn text color=\"black\" outlined elevation=\"0\" @click=\"submit\"> Submit </v-btn>\n      </v-card-actions>\n    </v-card>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'ImageCard',\n\n  props: {\n    image: Object\n  },\n\n  data: () => ({\n    isProcessed: false,\n    style: 10,\n    styles: ['original', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n    styleNames: ['candy', 'composition_7', 'feathers', 'la_muse', 'mosaic', 'rain', 'starry_night', 'the_scream', 'the_wave', 'udnie', 'random'] // TODO: RENAME\n  }),\n\n  methods: {\n    dataURLtoFile (dataURL, fileName) {\n      const arr = dataURL.split(',')\n      const mime = arr[0].match(/:(.*?);/)[1]\n      const bstr = atob(arr[1])\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n)\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n)\n      }\n\n      return new File([u8arr], fileName, {type: mime})\n    },\n    submit () {\n\n    },\n    async stylize () {\n      if (this.style === -1) {\n        this.isProcessed = false\n        return\n      }\n      \n      // this.style = 10\n      // TODO: class에 loading 넣기 \n      const formData = new FormData()\n\n      formData.append('style', this.style)\n      formData.append('contentImage', this.dataURLtoFile(this.image.original, `styled_${this.style}`))\n\n      const baseURL = this.$store.getters.urlOf('styleTransferServer')\n      const apiURL = `${baseURL}/api/stylize`\n\n      const response = await axios.post(apiURL, formData, {\n        responseType: 'arraybuffer'\n      })\n      const styledImageURL =\n        'data:' +\n        response.headers['content-type'] +\n        ';base64,' +\n        Buffer.from(response.data, 'binary').toString('base64') \n\n      this.image.processed = styledImageURL\n      this.isProcessed = true\n    }\n  },\n\n  watch: {\n    style () {\n      this.stylize()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.v-input {\n  font-size: 10px;\n}\n#image {\n  height: 512px;\n  width: 512px;\n  border: 2px solid black;\n  border-radius: 10px;\n}\n\n</style>\n"]}]}