{"remainingRequest":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/frontend/sketch2art/src/components/mobileSketch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/frontend/sketch2art/src/components/mobileSketch.vue","mtime":1620157259711},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["mobileSketch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mobileSketch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <v-layout class=\"univSketch\">\n        <v-card elevation=\"0\">\n            <canvas class=\"canvas\" id=\"sketchpad\" height=\"512\" width=\"512\">\n            </canvas>\n            <v-card-text>\n                제출하시면 스케치 이미지가 데이터셋으로 \n                <br>\n                사용될 수 있음에 동의하는 것으로 간주합니다.\n            </v-card-text>\n            \n            <v-card-actions>\n                <v-btn text color=\"black\" outlined elevation=\"0\" @click=\"eraseCanvas\">clear</v-btn>\n                <v-btn text color=\"black\" outlined elevation=\"0\" @click=\"capture\">submit</v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-layout>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { mapActions } from 'vuex'\n// import { mapMutations } from 'vuex'\nexport default {\n    name: 'mobileSketch',\n    data: () => ({\n        canvas: null,\n        context: null,\n        previousX: 0,\n        previousY: 0,\n        currentX: 0,\n        currentY: 0,\n        mouseDown: 0,\n        mouseX: 0,\n        mousey: 0,\n        touchX: 0,\n        touchY: 0,\n        pressing: false,\n        pressedAt: Date.now(),\n        shapes: [],\n        currnetShape: [],\n        intervalLastPosition: [-1, -1],\n        reader: new FileReader(),\n        stroke: 3,\n    }),\n    prop: {\n        image: Object\n    },\n    methods: {\n        ...mapActions(['addNewImage']),\n        ...mapActions(['resetImage']),\n        newFile () {\n            const files = this.$el.querySelector('.fileInput').files\n            const newFile = files[files.length - 1]\n\n            this.reader.readAsDataURL(newFile)\n        },\n\n        attachFile () {\n            this.$el.querySelector('.fileInput').click()\n        },\n\n        capture () {\n            this.resetImage()\n            const canvas = this.$el.querySelector(\"canvas\")\n            const newImage = canvas.toDataURL(\"image/jpeg\");\n\n            this.addNewImage(newImage)\n\n\n            // 서버 저장 하는 부분\n            const imgBase64 = canvas.toDataURL('image/jpeg', 'image/octet-stream');\n            const decodImg = atob(imgBase64.split(',')[1]);         \n            let array = [];\n\n            for (let i = 0; i < decodImg .length; i++) {\n                array.push(decodImg .charCodeAt(i));\n            }\n\n            const file = new Blob([new Uint8Array(array)], {type: 'image/jpeg'});\n            const fileName = 'canvas_img_' + new Date().getMilliseconds() + '.jpg';\n            let formData = new FormData();\n            formData.append('file', file, fileName);\n            \n            const baseURL = this.$store.getters.urlOf('styleTransferServer')\n            const apiURL = `${baseURL}/fileUpload`\n            axios.post(apiURL, formData, {\n                responseType: 'arraybuffer'\n            })\n            console.log('Captured')\n\n            this.image.submitted = true\n        },\n        eraseCanvas () {\n            this.resetImage()\n            this.shapes = []\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.context.fillStyle = \"white\"\n            this.context.fillRect(0, 0, this.canvas.width, this.canvas.height)\n            console.log('erase the canvas')\n        },\n\n        prepareNewShape () {\n            this.currentShape = [\n                [],\n                [],\n                []\n            ]\n        },\n        storeCoordinates () {\n            if (this.intervalLastPosition[0] !== this.previousX &&\n                this.intervalLastPosition[1] !== this.previousY) {\n                this.intervalLastPosition = [this.previousX, this.previousY]\n                this.currentShape[0].push(this.previousX)\n                this.currentShape[1].push(this.previousY)\n                this.currentShape[2].push(Date.now() - this.pressedAt)\n            }\n        },\n        commitCurrentShape () {\n            this.shapes.push(this.currentShape)\n        },\n\n        \n        // 그리는 부분\n        draw (evt) {\n            let timeInterval\n            switch (evt.type) {\n                case 'pointerdown':\n                case 'mousedown':\n                    timeInterval = this.drawDown(evt)\n                    console.log(\"down\")\n                    break\n                case 'pointercancle':\n                case 'touchcancle':\n                case 'mouseout':\n                    if (!this.pressing) break\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'pointerup':\n                case 'touchup':\n                case 'mouseup':\n                    console.log('clearing interval!')\n                    this.pressing = false\n                    clearInterval(timeInterval)\n                    this.commitCurrentShape()\n                    break\n                case 'pointermove':\n                case 'mousemove':\n                    if (this.pressing) {\n                        this.drawMove(evt)\n                    }\n                    break\n                // case for touchmove\n                case 'touchmove':\n                    this.drawMove(evt)\n                    // Prevent a scrolling action as a result of this touchmove triggering.\n                    evt.preventDefault();\n                    break\n                case 'touchstart':\n                    this.drawDown(evt)\n                    timeInterval = this.drawDown(evt)\n                    // Prevents an additional mousedown event being triggered\n                    evt.preventDefault();\n                    break\n                \n            }\n        },\n        drawDown (evt) {\n            this.updateXY(evt)\n            this.pressing = true\n            this.pressedAt = Date.now()\n\n            this.prepareNewShape()\n\n            return window.setInterval(() => this.storeCoordinates(), 9)\n        },\n        drawMove (evt) {\n            const drawStroke = this.stroke\n            const drawColor = 'black'\n            // TODO: make a config and use it.\n            this.updateXY(evt)\n            this.context.beginPath()\n            this.context.moveTo(this.previousX, this.previousY)\n            this.context.lineTo(this.currentX, this.currentY)\n            this.context.strokeStyle = drawColor\n            this.context.fillStyle = drawColor\n            this.context.lineCap = 'round'\n            this.context.lineJoin = 'round'\n            this.context.lineWidth = drawStroke\n            this.context.stroke()\n            this.context.closePath()\n        },\n        updateXY (evt) {\n            this.previousX = this.currentX\n            this.previousY = this.currentY\n\n            if(evt.targetTouches) {\n                // Prefer Touch Events\n                this.getTouchPos(evt)\n                this.currentX = this.touchX\n                this.currentY = this.touchY\n            } else {\n                this.getMousePos(evt)\n                // Either Mouse event or Pointer Event\n                this.currentX = this.mouseX\n                this.currentY = this.mouseY\n            }\n            \n            console.log(this.currentX)\n            console.log(this.currentY)\n        },\n\n        getMousePos (evt) {\n            if (evt.offsetX) {\n                this.mouseX = evt.offsetX;\n                this.mouseY = evt.offsetY;\n            }\n            else if (evt.layerX) {\n                this.mouseX = evt.layerX;\n                this.mouseY = evt.layerY;\n            }\n            console.log(\"gotMP\")\n        },\n\n        getTouchPos (evt) {\n            if(evt.touches) {\n                if (evt.touches.length == 1) { // Only deal with one finger\n                    var touch = evt.touches[0]; // Get the information for finger #1\n                    var rect = evt.target.getBoundingClientRect();\n                    this.touchX=touch.pageX-rect.x;\n                    this.touchY=touch.pageY-rect.y;\n                    // console.log(touch.target.offsetLeft, touch.target.offsetTop)\n                }\n            console.log(\"gotTP\")\n            }\n        }\n\n\n\n    // Get the touch position relative to the top-left of the canvas\n    // When we get the raw values of pageX and pageY below, they take into account the scrolling on the page\n    // but not the position relative to our target div. We'll adjust them using \"target.offsetLeft\" and\n    // \"target.offsetTop\" to get the correct values in relation to the top left of the canvas.\n\n    },\n    mounted () {\n        this.canvas = this.$el.querySelector(\"canvas\")\n        this.context = this.canvas.getContext('2d')\n\n\t\tthis.context.fillStyle = \"white\"\n\t\tthis.context.fillRect(0, 0, 512, 512)\n\n        if (window.PointerEvent) {\n            // Add Pointer Event Listener\n            console.log(\"support PointerEvent\")\n            this.canvas.addEventListener('pointerdown', this.draw);\n            this.canvas.addEventListener('pointermove', this.draw);\n            this.canvas.addEventListener('pointerup', this.draw);\n            this.canvas.addEventListener('pointercancel', this.draw);\n            } else {\n            // Add Touch Listener\n            this.canvas.addEventListener('touchstart', this.draw);\n            this.canvas.addEventListener('touchmove', this.draw);\n            this.canvas.addEventListener('touchend', this.draw);\n            this.canvas.addEventListener('touchcancel', this.draw);\n        \n            // Add Mouse Listener\n            this.canvas.addEventListener('mousemove', this.draw);\n            this.canvas.addEventListener('mousedown', this.draw);\n            this.canvas.addEventListener('mouseup', this.draw);\n            this.canvas.addEventListener('mousecout', this.draw);\n        }\n        this.reader.addEventListener('load', () => {\n            this.addNewImage(this.reader.result)\n        })\n    }\n}\n</script>\n\n\n<style>\n/* Some CSS styling */\n.canvas {\n    touch-action: none;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n\n}\n#sketchpad {\n    height: 512px;\n    width: 512px;\n    border: 2px solid black;\n    border-radius: 10px;\n    position: relative; /* Necessary for correct mouse co-ords in Firefox */\n}\n</style>\n"]}]}