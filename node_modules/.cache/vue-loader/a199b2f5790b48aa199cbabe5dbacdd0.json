{"remainingRequest":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimjngyun/frontend/sketch2art/src/components/mobileSketch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kimjngyun/frontend/sketch2art/src/components/mobileSketch.vue","mtime":1619774494800},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/babel-loader/lib/index.js","mtime":1619154893880},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/cache-loader/dist/cjs.js","mtime":1619073328948},{"path":"/Users/kimjngyun/frontend/sketch2art/node_modules/vue-loader/lib/index.js","mtime":1619154896205}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnbW9iaWxlU2tldGNoJywKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgY2FudmFzOiBudWxsLAogICAgICAgIHI6IDAsCiAgICAgICAgZzogMCwKICAgICAgICBiOiAwLAogICAgICAgIGE6IDAsCiAgICAgICAgY3R4OiAwLAogICAgICAgIG1vdXNlWDogMCwKICAgICAgICBtb3VzZXk6IDAsCiAgICAgICAgbW91c2VEb3duOiAwLAogICAgICAgIHRvdWNoWDogMCwKICAgICAgICB0b3VjaFk6IDAsCiAgICAgICAgc2hhcGVzOiBbXSwKICAgIH0pLAogICAgbWV0aG9kczogewogICAgICAgIC4uLm1hcEFjdGlvbnMoWydhZGROZXdJbWFnZSddKSwKICAgICAgICBuZXdGaWxlICgpIHsKICAgICAgICAgICAgY29uc3QgZmlsZXMgPSB0aGlzLiRlbC5xdWVyeVNlbGVjdG9yKCcuZmlsZUlucHV0JykuZmlsZXMKICAgICAgICAgICAgY29uc3QgbmV3RmlsZSA9IGZpbGVzW2ZpbGVzLmxlbmd0aCAtIDFdCgogICAgICAgICAgICB0aGlzLnJlYWRlci5yZWFkQXNEYXRhVVJMKG5ld0ZpbGUpCiAgICAgICAgfSwKCiAgICAgICAgYXR0YWNoRmlsZSAoKSB7CiAgICAgICAgICAgIHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoJy5maWxlSW5wdXQnKS5jbGljaygpCiAgICAgICAgfSwKCiAgICAgICAgY2FwdHVyZSAoKSB7CiAgICAgICAgICAgIGNvbnN0IGNhbnZhcyA9IHRoaXMuJGVsLnF1ZXJ5U2VsZWN0b3IoImNhbnZhcyIpCiAgICAgICAgICAgIGNvbnN0IG5ld0ltYWdlID0gY2FudmFzLnRvRGF0YVVSTCgiaW1hZ2UvanBlZyIpOwoKICAgICAgICAgICAgdGhpcy5hZGROZXdJbWFnZShuZXdJbWFnZSkKICAgICAgICAgICAgY29uc29sZS5sb2coJ0NhcHR1cmVkJykKICAgICAgICB9LAogICAgICAgIGVyYXNlQ2FudmFzICgpIHsKICAgICAgICAgICAgdGhpcy5zaGFwZXMgPSBbXQogICAgICAgICAgICB0aGlzLmN0eC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXMud2lkdGgsIHRoaXMuY2FudmFzLmhlaWdodCkKICAgICAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gIndoaXRlIgogICAgICAgICAgICB0aGlzLmN0eC5maWxsUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KQogICAgICAgICAgICBjb25zb2xlLmxvZygnZXJhc2UgdGhlIGNhbnZhcycpCiAgICAgICAgfSwKICAgICAgICBkcmF3RG90KGN0eCx4LHksc2l6ZSkgewogICAgICAgICAgICAvLyBMZXQncyB1c2UgYmxhY2sgYnkgc2V0dGluZyBSR0IgdmFsdWVzIHRvIDAsIGFuZCAyNTUgYWxwaGEgKGNvbXBsZXRlbHkgb3BhcXVlKQogICAgICAgICAgICB0aGlzLnI9MDsgdGhpcy5nPTA7IHRoaXMuYj0wOyB0aGlzLmE9MjU1OwoKICAgICAgICAgICAgLy8gU2VsZWN0IGEgZmlsbCBzdHlsZQogICAgICAgICAgICBjdHguZmlsbFN0eWxlID0gInJnYmEoIit0aGlzLnIrIiwiK3RoaXMuZysiLCIrdGhpcy5iKyIsIisodGhpcy5hLzI1NSkrIikiOwoKICAgICAgICAgICAgLy8gRHJhdyBhIGZpbGxlZCBjaXJjbGUKICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICAgICAgICBjdHguYXJjKHgsIHksIHNpemUsIDAsIE1hdGguUEkqMiwgdHJ1ZSk7IAogICAgICAgICAgICBjdHguY2xvc2VQYXRoKCk7CiAgICAgICAgICAgIGN0eC5maWxsKCk7CiAgICAgICAgfSwKCiAgICAgICAgLy8gQ2xlYXIgdGhlIGNhbnZhcyBjb250ZXh0IHVzaW5nIHRoZSBjYW52YXMgd2lkdGggYW5kIGhlaWdodAogICAgICAgIC8vIGNsZWFyQ2FudmFzKGNhbnZhcyxjdHgpIHsKICAgICAgICAvLyAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpOwogICAgICAgIC8vIH0sCgogICAgICAgIC8vIEtlZXAgdHJhY2sgb2YgdGhlIG1vdXNlIGJ1dHRvbiBiZWluZyBwcmVzc2VkIGFuZCBkcmF3IGEgZG90IGF0IGN1cnJlbnQgbG9jYXRpb24KICAgICAgICBza2V0Y2hwYWRfbW91c2VEb3duKCkgewogICAgICAgICAgICB0aGlzLm1vdXNlRG93bj0xOwogICAgICAgICAgICB0aGlzLmRyYXdEb3QodGhpcy5jdHgsdGhpcy5tb3VzZVgsdGhpcy5tb3VzZVksNCk7CiAgICAgICAgfSwKCiAgICAgICAgLy8gS2VlcCB0cmFjayBvZiB0aGUgbW91c2UgYnV0dG9uIGJlaW5nIHJlbGVhc2VkCiAgICAgICAgc2tldGNocGFkX21vdXNlVXAoKSB7CiAgICAgICAgICAgIHRoaXMubW91c2VEb3duPTA7CiAgICAgICAgfSwKCiAgICAgICAgLy8gS2VlcCB0cmFjayBvZiB0aGUgbW91c2UgcG9zaXRpb24gYW5kIGRyYXcgYSBkb3QgaWYgbW91c2UgYnV0dG9uIGlzIGN1cnJlbnRseSBwcmVzc2VkCiAgICAgICAgc2tldGNocGFkX21vdXNlTW92ZShlKSB7IAogICAgICAgICAgICAvLyBVcGRhdGUgdGhlIG1vdXNlIGNvLW9yZGluYXRlcyB3aGVuIG1vdmVkCiAgICAgICAgICAgIHRoaXMuZ2V0TW91c2VQb3MoZSk7CgogICAgICAgICAgICAvLyBEcmF3IGEgZG90IGlmIHRoZSBtb3VzZSBidXR0b24gaXMgY3VycmVudGx5IGJlaW5nIHByZXNzZWQKICAgICAgICAgICAgaWYgKHRoaXMubW91c2VEb3duPT0xKSB7CiAgICAgICAgICAgICAgICB0aGlzLmRyYXdEb3QodGhpcy5jdHgsdGhpcy5tb3VzZVgsdGhpcy5tb3VzZVksNCk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICAvLyBHZXQgdGhlIGN1cnJlbnQgbW91c2UgcG9zaXRpb24gcmVsYXRpdmUgdG8gdGhlIHRvcC1sZWZ0IG9mIHRoZSBjYW52YXMKICAgICAgICBnZXRNb3VzZVBvcyhlKSB7CiAgICAgICAgICAgIC8vIGlmICghZSkKICAgICAgICAgICAgLy8gICAgIGUgPSBldmVudDsKCiAgICAgICAgICAgIGlmIChlLm9mZnNldFgpIHsKICAgICAgICAgICAgICAgIHRoaXMubW91c2VYID0gZS5vZmZzZXRYOwogICAgICAgICAgICAgICAgdGhpcy5tb3VzZVkgPSBlLm9mZnNldFk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZiAoZS5sYXllclgpIHsKICAgICAgICAgICAgICAgIHRoaXMubW91c2VYID0gZS5sYXllclg7CiAgICAgICAgICAgICAgICB0aGlzLm1vdXNlWSA9IGUubGF5ZXJZOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgLy8gRHJhdyBzb21ldGhpbmcgd2hlbiBhIHRvdWNoIHN0YXJ0IGlzIGRldGVjdGVkCiAgICAgICAgc2tldGNocGFkX3RvdWNoU3RhcnQoKSB7CiAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgdG91Y2ggY28tb3JkaW5hdGVzCiAgICAgICAgICAgIHRoaXMuZ2V0VG91Y2hQb3MoKTsKCiAgICAgICAgICAgIHRoaXMuZHJhd0RvdCh0aGlzLmN0eCx0aGlzLnRvdWNoWCx0aGlzLnRvdWNoWSwgNCk7CgogICAgICAgICAgICAvLyBQcmV2ZW50cyBhbiBhZGRpdGlvbmFsIG1vdXNlZG93biBldmVudCBiZWluZyB0cmlnZ2VyZWQKICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9LAoKICAgIC8vIERyYXcgc29tZXRoaW5nIGFuZCBwcmV2ZW50IHRoZSBkZWZhdWx0IHNjcm9sbGluZyB3aGVuIHRvdWNoIG1vdmVtZW50IGlzIGRldGVjdGVkCiAgICAgICAgc2tldGNocGFkX3RvdWNoTW92ZShlKSB7IAogICAgICAgICAgICAvLyBVcGRhdGUgdGhlIHRvdWNoIGNvLW9yZGluYXRlcwogICAgICAgICAgICB0aGlzLmdldFRvdWNoUG9zKGUpOwoKICAgICAgICAgICAgLy8gRHVyaW5nIGEgdG91Y2htb3ZlIGV2ZW50LCB1bmxpa2UgYSBtb3VzZW1vdmUgZXZlbnQsIHdlIGRvbid0IG5lZWQgdG8gY2hlY2sgaWYgdGhlIHRvdWNoIGlzIGVuZ2FnZWQsIHNpbmNlIHRoZXJlIHdpbGwgYWx3YXlzIGJlIGNvbnRhY3Qgd2l0aCB0aGUgc2NyZWVuIGJ5IGRlZmluaXRpb24uCiAgICAgICAgICAgIHRoaXMuZHJhd0RvdCh0aGlzLmN0eCx0aGlzLnRvdWNoWCx0aGlzLnRvdWNoWSwgNCk7IAoKICAgICAgICAgICAgLy8gUHJldmVudCBhIHNjcm9sbGluZyBhY3Rpb24gYXMgYSByZXN1bHQgb2YgdGhpcyB0b3VjaG1vdmUgdHJpZ2dlcmluZy4KICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB9LAoKICAgIC8vIEdldCB0aGUgdG91Y2ggcG9zaXRpb24gcmVsYXRpdmUgdG8gdGhlIHRvcC1sZWZ0IG9mIHRoZSBjYW52YXMKICAgIC8vIFdoZW4gd2UgZ2V0IHRoZSByYXcgdmFsdWVzIG9mIHBhZ2VYIGFuZCBwYWdlWSBiZWxvdywgdGhleSB0YWtlIGludG8gYWNjb3VudCB0aGUgc2Nyb2xsaW5nIG9uIHRoZSBwYWdlCiAgICAvLyBidXQgbm90IHRoZSBwb3NpdGlvbiByZWxhdGl2ZSB0byBvdXIgdGFyZ2V0IGRpdi4gV2UnbGwgYWRqdXN0IHRoZW0gdXNpbmcgInRhcmdldC5vZmZzZXRMZWZ0IiBhbmQKICAgIC8vICJ0YXJnZXQub2Zmc2V0VG9wIiB0byBnZXQgdGhlIGNvcnJlY3QgdmFsdWVzIGluIHJlbGF0aW9uIHRvIHRoZSB0b3AgbGVmdCBvZiB0aGUgY2FudmFzLgogICAgICAgIGdldFRvdWNoUG9zKGUpIHsKICAgICAgICAgICAgLy8gaWYgKCFlKQogICAgICAgICAgICAvLyAgICAgZSA9IGV2ZW50OwoKICAgICAgICAgICAgaWYoZS50b3VjaGVzKSB7CiAgICAgICAgICAgICAgICBpZiAoZS50b3VjaGVzLmxlbmd0aCA9PSAxKSB7IC8vIE9ubHkgZGVhbCB3aXRoIG9uZSBmaW5nZXIKICAgICAgICAgICAgICAgICAgICB2YXIgdG91Y2ggPSBlLnRvdWNoZXNbMF07IC8vIEdldCB0aGUgaW5mb3JtYXRpb24gZm9yIGZpbmdlciAjMQogICAgICAgICAgICAgICAgICAgIHZhciByZWN0ID0gZS50YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy50b3VjaFg9dG91Y2gucGFnZVgtcmVjdC54OwogICAgICAgICAgICAgICAgICAgIHRoaXMudG91Y2hZPXRvdWNoLnBhZ2VZLXJlY3QueTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0b3VjaC50YXJnZXQub2Zmc2V0TGVmdCwgdG91Y2gudGFyZ2V0Lm9mZnNldFRvcCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgfSwKICAgIG1vdW50ZWQgKCkgewogICAgICAgIC8vIFNldC11cCB0aGUgY2FudmFzIGFuZCBhZGQgb3VyIGV2ZW50IGhhbmRsZXJzIGFmdGVyIHRoZSBwYWdlIGhhcyBsb2FkZWQKICAgICAgICAvLyBHZXQgdGhlIHNwZWNpZmljIGNhbnZhcyBlbGVtZW50IGZyb20gdGhlIEhUTUwgZG9jdW1lbnQKICAgICAgICB0aGlzLmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdza2V0Y2hwYWQnKTsKICAgICAgICAKICAgICAgICAvLyBJZiB0aGUgYnJvd3NlciBzdXBwb3J0cyB0aGUgY2FudmFzIHRhZywgZ2V0IHRoZSAyZCBkcmF3aW5nIGNvbnRleHQgZm9yIHRoaXMgY2FudmFzCiAgICAgICAgaWYgKHRoaXMuY2FudmFzLmdldENvbnRleHQpCiAgICAgICAgICAgIHRoaXMuY3R4ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTsKICAgICAgICAgICAgdGhpcy5jdHguZmlsbFN0eWxlID0gIndoaXRlIgogICAgICAgICAgICB0aGlzLmN0eC5maWxsUmVjdCgwLCAwLCA1MTIsIDUxMikKICAgICAgICAvLyBDaGVjayB0aGF0IHdlIGhhdmUgYSB2YWxpZCBjb250ZXh0IHRvIGRyYXcgb24vd2l0aCBiZWZvcmUgYWRkaW5nIGV2ZW50IGhhbmRsZXJzCiAgICAgICAgaWYgKHRoaXMuY3R4KSB7CiAgICAgICAgICAgIC8vIFJlYWN0IHRvIG1vdXNlIGV2ZW50cyBvbiB0aGUgY2FudmFzLCBhbmQgbW91c2V1cCBvbiB0aGUgZW50aXJlIGRvY3VtZW50CiAgICAgICAgICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuc2tldGNocGFkX21vdXNlRG93biwgZmFsc2UpOwogICAgICAgICAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLnNrZXRjaHBhZF9tb3VzZU1vdmUsIGZhbHNlKTsKICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLnNrZXRjaHBhZF9tb3VzZVVwLCBmYWxzZSk7CiAgICAgICAgICAgIC8vIFJlYWN0IHRvIHRvdWNoIGV2ZW50cyBvbiB0aGUgY2FudmFzCiAgICAgICAgICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB0aGlzLnNrZXRjaHBhZF90b3VjaFN0YXJ0LCBmYWxzZSk7CiAgICAgICAgICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMuc2tldGNocGFkX3RvdWNoTW92ZSwgZmFsc2UpOwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["mobileSketch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"mobileSketch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <body onload=\"init()\">\n        <div id=\"sketchpadapp\">\n            <div class=\"rightside\">\n                <canvas id=\"sketchpad\" height=\"512\" width=\"512\">\n                </canvas>\n            </div>\n            <div class=\"btns\">\n                <v-btn @click=\"eraseCanvas\">clear</v-btn>\n                <v-btn @click=\"capture\">submit</v-btn>\n            </div>\n        </div>\n    </body>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nexport default {\n    name: 'mobileSketch',\n    data: () => ({\n        canvas: null,\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n        ctx: 0,\n        mouseX: 0,\n        mousey: 0,\n        mouseDown: 0,\n        touchX: 0,\n        touchY: 0,\n        shapes: [],\n    }),\n    methods: {\n        ...mapActions(['addNewImage']),\n        newFile () {\n            const files = this.$el.querySelector('.fileInput').files\n            const newFile = files[files.length - 1]\n\n            this.reader.readAsDataURL(newFile)\n        },\n\n        attachFile () {\n            this.$el.querySelector('.fileInput').click()\n        },\n\n        capture () {\n            const canvas = this.$el.querySelector(\"canvas\")\n            const newImage = canvas.toDataURL(\"image/jpeg\");\n\n            this.addNewImage(newImage)\n            console.log('Captured')\n        },\n        eraseCanvas () {\n            this.shapes = []\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.fillStyle = \"white\"\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n            console.log('erase the canvas')\n        },\n        drawDot(ctx,x,y,size) {\n            // Let's use black by setting RGB values to 0, and 255 alpha (completely opaque)\n            this.r=0; this.g=0; this.b=0; this.a=255;\n\n            // Select a fill style\n            ctx.fillStyle = \"rgba(\"+this.r+\",\"+this.g+\",\"+this.b+\",\"+(this.a/255)+\")\";\n\n            // Draw a filled circle\n            ctx.beginPath();\n            ctx.arc(x, y, size, 0, Math.PI*2, true); \n            ctx.closePath();\n            ctx.fill();\n        },\n\n        // Clear the canvas context using the canvas width and height\n        // clearCanvas(canvas,ctx) {\n        //     ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // },\n\n        // Keep track of the mouse button being pressed and draw a dot at current location\n        sketchpad_mouseDown() {\n            this.mouseDown=1;\n            this.drawDot(this.ctx,this.mouseX,this.mouseY,4);\n        },\n\n        // Keep track of the mouse button being released\n        sketchpad_mouseUp() {\n            this.mouseDown=0;\n        },\n\n        // Keep track of the mouse position and draw a dot if mouse button is currently pressed\n        sketchpad_mouseMove(e) { \n            // Update the mouse co-ordinates when moved\n            this.getMousePos(e);\n\n            // Draw a dot if the mouse button is currently being pressed\n            if (this.mouseDown==1) {\n                this.drawDot(this.ctx,this.mouseX,this.mouseY,4);\n            }\n        },\n\n        // Get the current mouse position relative to the top-left of the canvas\n        getMousePos(e) {\n            // if (!e)\n            //     e = event;\n\n            if (e.offsetX) {\n                this.mouseX = e.offsetX;\n                this.mouseY = e.offsetY;\n            }\n            else if (e.layerX) {\n                this.mouseX = e.layerX;\n                this.mouseY = e.layerY;\n            }\n        },\n\n        // Draw something when a touch start is detected\n        sketchpad_touchStart() {\n            // Update the touch co-ordinates\n            this.getTouchPos();\n\n            this.drawDot(this.ctx,this.touchX,this.touchY, 4);\n\n            // Prevents an additional mousedown event being triggered\n            event.preventDefault();\n        },\n\n    // Draw something and prevent the default scrolling when touch movement is detected\n        sketchpad_touchMove(e) { \n            // Update the touch co-ordinates\n            this.getTouchPos(e);\n\n            // During a touchmove event, unlike a mousemove event, we don't need to check if the touch is engaged, since there will always be contact with the screen by definition.\n            this.drawDot(this.ctx,this.touchX,this.touchY, 4); \n\n            // Prevent a scrolling action as a result of this touchmove triggering.\n            event.preventDefault();\n        },\n\n    // Get the touch position relative to the top-left of the canvas\n    // When we get the raw values of pageX and pageY below, they take into account the scrolling on the page\n    // but not the position relative to our target div. We'll adjust them using \"target.offsetLeft\" and\n    // \"target.offsetTop\" to get the correct values in relation to the top left of the canvas.\n        getTouchPos(e) {\n            // if (!e)\n            //     e = event;\n\n            if(e.touches) {\n                if (e.touches.length == 1) { // Only deal with one finger\n                    var touch = e.touches[0]; // Get the information for finger #1\n                    var rect = e.target.getBoundingClientRect();\n                    this.touchX=touch.pageX-rect.x;\n                    this.touchY=touch.pageY-rect.y;\n                    console.log(touch.target.offsetLeft, touch.target.offsetTop)\n                }\n            }\n        },\n\n    },\n    mounted () {\n        // Set-up the canvas and add our event handlers after the page has loaded\n        // Get the specific canvas element from the HTML document\n        this.canvas = document.getElementById('sketchpad');\n        \n        // If the browser supports the canvas tag, get the 2d drawing context for this canvas\n        if (this.canvas.getContext)\n            this.ctx = this.canvas.getContext('2d');\n            this.ctx.fillStyle = \"white\"\n            this.ctx.fillRect(0, 0, 512, 512)\n        // Check that we have a valid context to draw on/with before adding event handlers\n        if (this.ctx) {\n            // React to mouse events on the canvas, and mouseup on the entire document\n            this.canvas.addEventListener('mousedown', this.sketchpad_mouseDown, false);\n            this.canvas.addEventListener('mousemove', this.sketchpad_mouseMove, false);\n            window.addEventListener('mouseup', this.sketchpad_mouseUp, false);\n            // React to touch events on the canvas\n            this.canvas.addEventListener('touchstart', this.sketchpad_touchStart, false);\n            this.canvas.addEventListener('touchmove', this.sketchpad_touchMove, false);\n        }\n    }\n}\n</script>\n\n\n<style>\n/* Some CSS styling */\n#sketchpadapp {\n    /* Prevent nearby text being highlighted when accidentally dragging mouse outside confines of the canvas */\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.rightside {\n    float:left;\n    margin-left:20px;\n}\n#sketchpad {\n    float:left;\n    height:512pxs;\n    width:512px;\n    border:2px solid #888;\n    border-radius:4px;\n    position:relative; /* Necessary for correct mouse co-ords in Firefox */\n}\n#clearbutton {\n    font-size: 15px;\n    padding: 10px;\n    -webkit-appearance: none;\n    background: #eee;\n    border: 1px solid #888;\n}\n</style>\n"]}]}